{"version":3,"sources":["App/toGeoJson.ts","App/distance-label.ts","App/ShopMeta.tsx","App/Shop.tsx","App/simplestyle.ts","App/move-iss.ts","App/Map.tsx","App/Home.tsx","App/ShopListItem.tsx","App/List.tsx","geolocation.ts","App/AboutUs.tsx","App/Tabbar.tsx","App.tsx","App/Share.tsx","About.tsx","Container.tsx","serviceWorker.ts","index.tsx"],"names":["toGeoJson","data","geojson","type","features","id","item","feature","geometry","coordinates","Number","properties","_id","i","Object","keys","length","key","push","makeDistanceLabelText","distance","distanceTipText","isNaN","Math","round","Content","props","shop","tableData","entries","filter","value","includes","className","mapNode","React","useRef","useState","map","setMap","useEffect","current","nextMap","window","geolonia","Map","container","interactive","zoom","onClick","close","remove","size","color","ref","style","width","height","marginTop","SimpleStyle","json","options","this","cluster","heatmap","clusterColor","points","toLowerCase","addSource","clusterMaxZoom","clusterRadius","setPointGeometries","setCluster","getContainer","dataset","lng","lat","bounds","geojsonExtent","fitBounds","duration","padding","addLayer","source","paint","layout","on","getCanvas","cursor","e","queryRenderedFeatures","point","layers","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","center","moveISS","marker","mapObject","fetch","then","response","longitude","latitude","setLngLat","addTo","flyTo","setTimeout","CSS","position","setMapObject","undefined","setShop","config","markers","event","document","querySelector","Marker","element","offset","fitBoundsOptions","onMapLoad","setLayoutProperty","display","orienteationchangeHandler","resize","addEventListener","removeEventListener","off","popupHandler","margin","sortShopList","shopList","a","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","error","enableHighAccuracy","timeout","maximumAge","currentPosition","from","turf","sortingShopList","parseFloat","to","units","sort","b","setData","isMounted","sortedData","index","content","setContent","ok","text","status","menus","menu","href","process","url","icon","title","App","setShopList","csvUrl","location","origin","pathname","csvParser","console","log","header","records","record","reduce","prev","column","indexOf","replace","s","String","fromCharCode","charCodeAt","nextShopList","match","PagesRoute","exact","path","Home","TwitterShareButton","hashtags","TwitterIcon","FacebookShareButton","hashtag","FacebookIcon","LineShareButton","LineIcon","src","logo_image","alt","description","bgColor","fgColor","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","headers","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dce57a50.chunk.js","sourcesContent":["type Geometry = {\n  type: string;\n  coordinates: number[]\n}\n\ntype featureProperties = {\n  [key: string]: string;\n}\n\ntype Feature = {\n  type: string;\n  geometry: Geometry;\n  properties: featureProperties\n}\n\ntype itemObject = {\n  [key: string]: any;\n}\n\nexport type GeoJSON = {\n  type: string;\n  features: Feature[]\n}\n\nconst toGeoJson = (data: any) => {\n  const geojson = {\n    type: \"FeatureCollection\",\n    features: []\n  } as GeoJSON\n\n  for (const id in data) {\n    const item = data[id] as itemObject\n\n    if (!item['lng'] || !item['lat']) {\n      return;\n    }\n\n    const feature = {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [Number(item['lng']), Number(item['lat'])]\n      },\n      properties: {_id: id}\n    } as Feature\n\n    for (let i = 0; i < Object.keys(item).length; i++) {\n      const key = Object.keys(item)[i]\n      feature.properties[key] = item[key]\n    }\n\n    geojson.features.push(feature)\n  }\n\n  return geojson\n}\n\nexport default toGeoJson;\n","export const makeDistanceLabelText = (distance: number | void) => {\n  let distanceTipText = \"\"\n  if(typeof distance === 'number' && !Number.isNaN(distance)) {\n    if(distance > 1000) {\n      distanceTipText = Math.round(distance / 1000) + ' km'\n    } else {\n      distanceTipText = Math.round(distance) + ' m'\n    }\n  }\n  return distanceTipText\n}\n","import React from \"react\";\nimport './ShopMeta.scss'\n\ntype Props = {\n  shop: Iemeshi.ShopData;\n}\n\nconst Content = (props: Props) => {\n  const { shop } = props\n\n  const tableData = Object.entries(shop).filter((data, i) => {\n    const key = data[0]\n    const value = data[1]\n    const excludes = [\n      '_id',\n      'index',\n      'distance',\n      'lat',\n      'lng',\n      'title',\n      'description',\n      'marker-size',\n      'marker-symbol',\n      'marker-color',\n      'stroke',\n      'stroke-width',\n      'fill'\n    ]\n    if (!excludes.includes(key)) {\n      return <tr key={i}><th>{key}</th><td>{value}</td></tr>\n    } else {\n      return false\n    }\n  })\n\n  return (\n    tableData.length !== 0 ? (\n      <table className=\"shop-meta-table\">\n        <tbody>\n          {tableData}\n        </tbody>\n      </table>\n    )\n    :\n    <></>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport './Shop.scss'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { makeDistanceLabelText } from \"./distance-label\";\nimport ShopMeta from './ShopMeta'\n\ntype Props = {\n  shop: Iemeshi.ShopData;\n  close: Function;\n}\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [map, setMap] = React.useState<any>(null)\n  const { shop } = props\n\n  const clickHandler = () => {\n    props.close()\n    if(mapNode.current) {\n      mapNode.current.remove()\n      map.remove()\n    }\n  }\n\n  React.useEffect(() => {\n    if (!mapNode.current) {\n      return\n    }\n\n    // @ts-ignore\n    const nextMap = new window.geolonia.Map({\n      container: mapNode.current,\n      interactive: false,\n      zoom: 14,\n    });\n    setMap(nextMap)\n  }, [shop, mapNode])\n\n  const distanceTipText = makeDistanceLabelText(shop.distance)\n\n  return (\n    <div className=\"shop-single\">\n      <div className=\"head\">\n        <button onClick={clickHandler}><AiOutlineClose size=\"16px\" color=\"#FFFFFF\" /> 閉じる</button>\n      </div>\n      <div className=\"container\">\n        {shop?\n          <>\n            <h2>{shop['title']}</h2>\n            <div>\n              {/* <span className=\"nowrap\"><span className=\"category\">{shop['ジャンル']}</span></span> */}\n              <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span> }</span>\n            </div>\n            <div className=\"description\">{shop['description']}</div>\n\n            <ShopMeta shop={shop} />\n\n            <div\n              ref={mapNode}\n              style={{width: '100%', height: '200px', marginTop: \"24px\"}}\n              data-lat={shop['lat']}\n              data-lng={shop['lng']}\n              data-navigation-control=\"on\"\n            ></div>\n\n          </>\n          :\n          <></>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","// @ts-ignore\nimport geojsonExtent from '@mapbox/geojson-extent';\nimport { GeoJSON } from './toGeoJson';\n\nconst textColor = '#000000';\nconst textHaloColor = '#FFFFFF';\nconst backgroundColor = 'rgba(255, 0, 0, 0.4)';\nconst strokeColor = '#FFFFFF';\n\nclass SimpleStyle {\n  json: GeoJSON | undefined;\n  map: any;\n  options: any;\n\n  constructor(json: GeoJSON | undefined, map:any, options: any) {\n    this.json = json;\n    this.map = map;\n\n    this.options = {\n      cluster: true,\n      heatmap: false,\n      clusterColor: '#ff0000',\n      ...options,\n    };\n  }\n\n  addTo(map: any) {\n    if (!this.json) {\n      return\n    }\n    const features = this.json.features;\n    const points = features.filter((feature) => (feature.geometry.type.toLowerCase() === 'point'));\n\n    map.addSource('geolonia-simple-style-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: points,\n      },\n      cluster: this.options.cluster,\n      clusterMaxZoom: 14,\n      clusterRadius: 50,\n    });\n\n    this.setPointGeometries(map);\n    this.setCluster(map);\n\n    const container = map.getContainer();\n\n    if (!container.dataset || (!container.dataset.lng && !container.dataset.lat)) {\n      const bounds = geojsonExtent(this.json);\n      map.fitBounds(bounds, {\n        duration: 0,\n        padding: 30,\n      });\n    }\n  }\n\n  /**\n   * Setup point geometries.\n   *\n   * @param map\n   */\n  setPointGeometries(map: any) {\n    map.addLayer({\n      id: 'circle-simple-style-points',\n      type: 'circle',\n      source: 'geolonia-simple-style-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        'circle-radius': [\n          'case',\n          ['==', 'small', ['get', 'marker-size']], 7,\n          ['==', 'large', ['get', 'marker-size']], 13,\n          9,\n        ],\n        'circle-color': ['string', ['get', 'marker-color'], backgroundColor],\n        'circle-opacity': ['number', ['get', 'fill-opacity'], 0.4],\n        'circle-stroke-width': ['number', ['get', 'stroke-width'], 2],\n        'circle-stroke-color': ['string', ['get', 'stroke'], strokeColor],\n        'circle-stroke-opacity': ['number', ['get', 'stroke-opacity'], 1.0],\n      }\n    });\n\n    map.addLayer({\n      id: 'symbol-simple-style-points',\n      type: 'symbol',\n      source: 'geolonia-simple-style-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        'text-color': ['string', ['get', 'text-color'], textColor],\n        'text-halo-color': ['string', ['get', 'text-halo-color'], textHaloColor],\n        'text-halo-width': 2,\n      },\n      layout: {\n        'icon-image': [\n          'case',\n          ['==', 'large', ['get', 'marker-size']], ['image', ['concat', ['get', 'marker-symbol'], '-15']],\n          ['image', ['concat', ['get', 'marker-symbol'], '-11']],\n        ],\n        'text-field': ['get', 'title'],\n        'text-font': ['Noto Sans Regular'],\n        'text-size': 12,\n        'text-anchor': 'top',\n        'text-variable-anchor': ['top', 'bottom', 'left', 'right'],\n        'text-max-width': 12,\n        'text-offset': [\n          'case',\n          ['==', 'small', ['get', 'marker-size']], ['literal', [0, 0.6]],\n          ['==', 'large', ['get', 'marker-size']], ['literal', [0, 1.2]],\n          ['literal', [0, 0.8]],\n        ],\n        'text-allow-overlap': false,\n        'text-radial-offset': 0.5,\n        'text-justify': 'auto'\n      }\n    });\n\n    map.on('mouseenter', 'circle-simple-style-points', () => {\n      map.getCanvas().style.cursor = 'pointer'\n    })\n\n    map.on('mouseleave', 'circle-simple-style-points', () => {\n      map.getCanvas().style.cursor = ''\n    })\n\n    map.on('mouseenter', 'symbol-simple-style-points', () => {\n      map.getCanvas().style.cursor = 'pointer'\n    })\n\n    map.on('mouseleave', 'symbol-simple-style-points', () => {\n      map.getCanvas().style.cursor = ''\n    })\n  }\n\n  /**\n   * Setup cluster markers\n   *\n   * @param map\n   */\n  setCluster(map: any) {\n    map.addLayer({\n      id: 'clusters',\n      type: 'circle',\n      source: 'geolonia-simple-style-points',\n      filter: ['has', 'point_count'],\n      paint: {\n        'circle-radius': 20,\n        'circle-color': this.options.clusterColor,\n        'circle-opacity': 1.0,\n      },\n    });\n\n    map.addLayer({\n      id: 'cluster-count',\n      type: 'symbol',\n      source: 'geolonia-simple-style-points',\n      filter: ['has', 'point_count'],\n      paint: {\n        'text-color': '#FFFFFF',\n      },\n      layout: {\n        'text-field': '{point_count_abbreviated} 件',\n        'text-size': 12,\n        'text-font': ['Noto Sans Regular'],\n      },\n    });\n\n    map.on('click', 'clusters', (e: any) => {\n      const features = map.queryRenderedFeatures(e.point, { layers: ['clusters'] });\n      const clusterId = features[0].properties.cluster_id;\n      map.getSource('geolonia-simple-style-points').getClusterExpansionZoom(clusterId, (err: any, zoom: number) => {\n        if (err)\n          return;\n\n          map.easeTo({\n          center: features[0].geometry.coordinates,\n          zoom: zoom,\n        });\n      });\n    });\n\n    map.on('mouseenter', 'clusters', () => {\n      map.getCanvas().style.cursor = 'pointer';\n    });\n\n    map.on('mouseleave', 'clusters', () => {\n      map.getCanvas().style.cursor = '';\n    });\n  }\n}\n\nexport default SimpleStyle;\n","// ISS の画像をアニメーション\nexport const moveISS = (marker:any, mapObject:any) => {\n  fetch('https://api.wheretheiss.at/v1/satellites/25544')\n    .then(response => response.json())\n    .then(data => {\n      const coordinates = [data.longitude,data.latitude];\n      marker.setLngLat(coordinates).addTo(mapObject);\n      mapObject.flyTo({center: coordinates});\n    });\n  setTimeout(function(){moveISS(marker, mapObject)}, 2000);\n}\n","import React from \"react\";\n// @ts-ignore\nimport geojsonExtent from '@mapbox/geojson-extent'\nimport toGeoJson from './toGeoJson'\nimport Shop from './Shop'\nimport SimpleStyle from './simplestyle';\nimport { moveISS } from './move-iss'\nimport config from '../config.json'\n\ntype Props = {\n  data: Iemeshi.ShopData[];\n};\n\nconst CSS: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n}\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [ mapObject, setMapObject ] = React.useState<any>()\n  const [ shop, setShop ] = React.useState<Iemeshi.ShopData | undefined>(undefined)\n\n  React.useEffect(() => {\n    if (!mapObject || !props.data) {\n      return\n    }\n\n    // nothing to do if shops exists.\n    if (mapObject.getSource('shops')) {\n      return\n    }\n\n    const geojson = toGeoJson(props.data)\n\n    new SimpleStyle(geojson, mapObject, {\n      cluster: (true),\n      clusterColor: config.markers.clusterColor,\n    }).addTo(mapObject);\n\n    mapObject.on('click', 'circle-simple-style-points', (event: any) => {\n      if (!event.features[0].properties.cluster) {\n        setShop(event.features[0].properties)\n      }\n    })\n\n    mapObject.on('click', 'symbol-simple-style-points', (event: any) => {\n      if (!event.features[0].properties.cluster) {\n        setShop(event.features[0].properties)\n      }\n    })\n\n  }, [mapObject, props.data])\n\n  React.useEffect(() => {\n    // Only once reder the map.\n    if (!mapNode.current || mapObject || props.data.length === 0) {\n      return\n    }\n\n    // @ts-ignore\n    const { geolonia } = window;\n\n    const style = 'geolonia/gsi'\n\n    const geojson = toGeoJson(props.data)\n    const bounds = geojsonExtent(geojson)\n\n    const container:HTMLImageElement|null = document.querySelector('#iss');\n\n    if (!container) {\n      return\n    }\n\n    const marker = new geolonia.Marker({\n      element: container,\n      offset: [-3,-28],\n    })\n\n    const map = new geolonia.Map({\n      container: mapNode.current,\n      style: style,\n      bounds: bounds,\n      fitBoundsOptions: {padding: 50}\n    });\n\n    const onMapLoad = () => {\n      map.setLayoutProperty('poi', 'visibility', 'none')\n      map.setLayoutProperty('poi-primary', 'visibility', 'none')\n      moveISS(marker, map);\n      setMapObject(map)\n      container.style.display = 'block';\n    }\n\n    const orienteationchangeHandler = () => {\n      map.resize()\n    }\n\n    // attach\n    map.on('load', onMapLoad)\n\n    window.addEventListener('orientationchange', orienteationchangeHandler)\n\n    return () => {\n      // detach to prevent memory leak\n      window.removeEventListener('orientationchange', orienteationchangeHandler)\n      map.off('load', onMapLoad)\n    }\n  }, [mapNode, mapObject, props.data])\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  return (\n    <div style={CSS}>\n      <div\n        ref={mapNode}\n        style={CSS}\n        data-geolocate-control=\"on\"\n        data-marker=\"off\"\n        data-gesture-handling=\"off\"\n      ></div>\n      {shop?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Map from \"./Map\"\n\ntype Props = {\n  data: Iemeshi.ShopData[];\n}\n\nconst Content = (props: Props) => {\n  return (\n    <><Map data={props.data} /></>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport { BsChevronCompactRight } from 'react-icons/bs'\nimport { makeDistanceLabelText } from './distance-label'\nimport ShopMeta from './ShopMeta'\nimport './ShopListItem.scss'\n\ntype Props = {\n  data: Iemeshi.ShopData;\n  popupHandler: Function;\n};\n\nconst Content = (props: Props) => {\n  const clickHandler = () => {\n    props.popupHandler(props.data)\n  }\n\n  const distanceTipText = makeDistanceLabelText(props.data.distance)\n\n  return (\n    <>\n      <button className=\"shop-link\" onClick={clickHandler}>\n        <h2>{props.data['title']}</h2>\n        <div>\n          {/* <span className=\"nowrap\"><span className=\"category\">{props.data['ジャンル']}</span></span> */}\n          <span className=\"nowrap\">{distanceTipText && <span className=\"distance\">現在位置から {distanceTipText}</span> }</span>\n        </div>\n\n        <div style={{margin: \"16px 0\"}}><ShopMeta shop={props.data} /></div>\n\n        <div className=\"right\"><BsChevronCompactRight size=\"40px\" color=\"#CCCCCC\" /></div>\n      </button>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport ShopListItem from './ShopListItem'\nimport Shop from './Shop'\nimport './List.scss'\nimport { askGeolocationPermission } from '../geolocation'\nimport * as turf from \"@turf/turf\"\n\ntype Props = {\n  data: Iemeshi.ShopData[];\n}\n\nconst sortShopList = async (shopList: Iemeshi.ShopData[]) => {\n  const currentPosition = await askGeolocationPermission()\n  if(currentPosition) {\n    const from = turf.point(currentPosition);\n    const sortingShopList = shopList.map((shop) => {\n      const lng = parseFloat(shop['lng'])\n      const lat = parseFloat(shop['lat'])\n      if(Number.isNaN(lng) || Number.isNaN(lat)) {\n        return shop\n      } else {\n        const to = turf.point([lng, lat])\n        const distance = turf.distance(from, to, {units: 'meters' as 'meters'});\n        return { ...shop, distance }\n      }\n    })\n    sortingShopList.sort((a,b) => {\n      if(typeof a.distance !== 'number' || Number.isNaN(a.distance)) {\n        return 1\n      } else if (typeof b.distance !== 'number' || Number.isNaN(b.distance)) {\n        return -1\n      } else {\n        return a.distance - b.distance\n      }\n    })\n    return sortingShopList\n  } else {\n    return shopList\n  }\n}\n\n\nconst Content = (props: Props) => {\n\n  const [ shop, setShop  ] = React.useState<Iemeshi.ShopData | undefined>()\n  const [ data, setData ] = React.useState(props.data)\n\n  React.useEffect(() => {\n    let isMounted = true\n    sortShopList(props.data)\n      .then(sortedData => {\n        // prevent memory leak\n        if(isMounted) {\n          setData(sortedData)\n        }\n      })\n    return () => {\n      isMounted = false\n    }\n  }, [props.data])\n\n\n  const popupHandler = (shop: Iemeshi.ShopData) => {\n    if (shop) {\n      setShop(shop)\n    }\n  }\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  return (\n    <div className=\"shop-list\">\n      {\n        data.map((shop) => <div key={shop.index} className=\"shop\">\n          <ShopListItem\n            data={shop}\n            popupHandler={popupHandler}\n          />\n        </div>)\n      }\n      {shop?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","\nexport const askGeolocationPermission = () => {\n  return new Promise<Iemeshi.LngLat | null>((resolve, reject) => {\n\n    if(!window.navigator.geolocation || !window.navigator.geolocation.getCurrentPosition) {\n      resolve(null)\n    }\n\n    window.navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const lat = pos.coords.latitude\n        const lng = pos.coords.longitude\n        resolve([lng, lat])\n      },\n      (error) => {\n        resolve(null)\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      }\n    )\n  })\n}\n","import React from \"react\";\nimport Markdown from 'markdown-to-jsx';\nimport './AboutUs.scss'\n\ntype Props = {\n  data: string | undefined;\n}\n\nconst Content = (props: Props) => {\n\n  const [ content, setContent ] = React.useState<string>('')\n\n  React.useEffect(() => {\n    if (!props.data) {\n      return\n    }\n\n    fetch(props.data)\n    .then((response) => {\n      return response.ok ? response.text() : Promise.reject(response.status);\n    })\n    .then((data) => {\n      setContent(data)\n    });\n  }, [props.data])\n\n  return (\n    <div className=\"about-us\">\n      <div className=\"container\">\n        <Markdown>{content}</Markdown>\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport './Tabbar.scss'\nimport config from '../config.json'\n\nconst Content = () => {\n  return (\n    <div className=\"tabbar\">\n      <ul>\n        {config.menus.map((menu, index) => <li key={index}><a href={`${process.env.PUBLIC_URL}/#${menu.url}`}><div className=\"icon\"><i className={menu.icon}></i></div><div className=\"text\">{menu.title}</div></a></li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Home from './App/Home'\nimport List from './App/List'\nimport AboutUs from './App/AboutUs'\n\nimport Tabbar from './App/Tabbar'\n\nimport csvParser from 'csv-parse'\nimport config from './config.json'\n\nconst zen2han = (str: string) => {\n  return str.replace(/[！-～]/g, function(s: string) {\n    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n  }).replace(/　/g, ' ');\n}\n\nconst App = () => {\n  const [ shopList, setShopList ] = React.useState<Iemeshi.ShopData[]>([])\n\n  React.useEffect(() => {\n    const csvUrl = `${window.location.origin}${window.location.pathname}/data.csv`\n    fetch(csvUrl)\n    .then((response) => {\n      return response.ok ? response.text() : Promise.reject(response.status);\n    })\n    .then((data) => {\n      csvParser(data, async (error, data) => {\n        if (error) {\n          console.log(error)\n          setShopList([])\n          return\n        }\n\n        const [header, ...records] = data;\n\n        const features = records.map((record: string) => {\n          const properties = header.reduce((prev: any, column: any) => {\n            const value = record[header.indexOf(column)];\n            prev[column] = zen2han(value);\n            return prev;\n          }, {});\n\n          return properties;\n        });\n\n        const nextShopList: Iemeshi.ShopData[] = []\n        for (let i = 0; i < features.length; i++) {\n          const feature = features[i] as Iemeshi.ShopData\n          if (!feature['lat'] || !feature['lng']) {\n            continue;\n          }\n          if (!feature['lat'].match(/^[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n          if (!feature['lng'].match(/^[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n          const shop = {\n            index: i,\n            ...feature\n          }\n\n          nextShopList.push(shop)\n        }\n        setShopList(nextShopList)\n      });\n    });\n  }, [])\n\n  // eslint-disable-next-line\n  const PagesRoute = config.menus.map((menu, index) => {\n    if(menu.url !== \"/\" && menu.url !== \"/list\") {\n      return <Route key={index} exact path={`${menu.url}`}><AboutUs data={menu.content} /></Route>\n    }\n  })\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-body\">\n        <HashRouter>\n          <Route exact path=\"/\"><Home data={shopList} /></Route>\n          <Route exact path=\"/list\"><List data={shopList} /></Route>\n          {PagesRoute}\n        </HashRouter>\n      </div>\n      <div className=\"app-footer\">\n        <Tabbar />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { FacebookShareButton, LineShareButton, TwitterShareButton } from \"react-share\";\nimport { FacebookIcon, LineIcon, TwitterIcon } from \"react-share\";\nimport config from '../config.json'\n\nimport './Share.scss'\n\nconst Content = () => {\n  const url = window.location.href.replace(/\\?.+$/, '').replace(/#.+$/, '')\n\n  return (\n    <div className=\"share\">\n      <ul>\n        <li><a href=\"/\"><TwitterShareButton url={url} hashtags={['issmap']} title={`${config.title}`}><TwitterIcon size={32} round={true} /></TwitterShareButton></a></li>\n        <li><a href=\"/\"><FacebookShareButton url={url} hashtag=\"#issmap\"><FacebookIcon size={32} round={true} /></FacebookShareButton></a></li>\n        <li><a href=\"/\"><LineShareButton url={url} title={`${config.title}`}><LineIcon size={32} round={true} /></LineShareButton></a></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport './About.scss'\nimport QRCode from 'qrcode.react'\nimport Share from './App/Share'\nimport config from './config.json'\n\nconst Content = () => {\n  const url = window.location.href.replace(/\\?.+$/, '').replace(/#.+$/, '')\n\n  return (\n    <div className=\"about\">\n      <div className=\"branding\">\n        <div className=\"image\"><img src={config.logo_image} alt=\"\"/></div>\n        <h1 className=\"logo\">{config.title}</h1>\n      </div>\n\n      <h2 className=\"description\">{config.description}</h2>\n      <div className=\"qrcode\"><QRCode value={url} bgColor=\"transparent\" fgColor=\"#FFFFFF\" /></div>\n      <Share />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\n\nimport App from './App'\nimport About from './About'\nimport './Container.scss'\n\nfunction Content() {\n  return (\n    <div className=\"outer-container\">\n      <div className=\"inner-container\">\n        <About />\n        <App />\n      </div>\n    </div>\n  );\n}\n\nexport default Content;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Container from './Container';\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}